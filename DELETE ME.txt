#python3 manage.py runserver

Token 11/24/21
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

Get Email Address from user models
https://stackoverflow.com/questions/20400767/how-to-get-the-email-address-from-auth-user-table-of-requested-user-id-in-django

Growing textbox
https://css-tricks.com/auto-growing-inputs-textareas/

DropDown Navbar
https://www.w3schools.com/howto/howto_css_dropdown.asp

Django SearchBar
https://stackoverflow.com/questions/66914241/how-do-i-get-user-input-from-search-bar-to-display-in-a-page-django


https://simpleisbetterthancomplex.com/tutorial/2016/08/15/how-to-create-a-password-confirmation-view.html

https://simpleisbetterthancomplex.com/tutorial/2018/01/18/how-to-implement-multiple-user-types-with-django.html

https://codepen.io/nikhil8krishnan/pen/WvYPvv

https://stackoverflow.com/questions/2539109/logging-users-out-of-a-django-site-after-n-minutes-of-inactivity

https://www.sliderrevolution.com/resources/css-modal/

https://www.joshwcomeau.com/animation/css-transitions/

https://stackoverflow.com/questions/25386119/whats-the-difference-between-a-onetoone-manytomany-and-a-foreignkey-field-in-d

https://devpyjp.com/how-to-export-csv-files-in-django-django-tutorials/

https://stackoverflow.com/questions/21168521/table-fixed-header-and-scrollable-body

www.imaputz.com/cssStuff/bigFourVersion.html

https://codepen.io/nw/pen/udkIB
class sample_initiated(Sample):
    SAMPLE_TEST = (
        ('Reverse Phase HPLC', 'Reverse Phase HPLC'),
        ('SEC HPLC', 'SEC HPLC'),
        ('UV-VIS', 'UV-VIS'),
        ('Karl-Fischer', 'Karl-Fischer'),
        ('pH', 'pH'),
        ('Dissolution', 'Dissolution'),
        ('Wet Chemistry', 'Wet Chemistry'),
        ('Raw Material', 'Raw Material'),
        ('CTL Testing', 'CTL Testing'),
    )
    initiated = models.BooleanField(default=True)
    sample_test = models.CharField(max_length=200, choices = SAMPLE_TEST)
    initiated_by = models.ForeignKey(User, on_delete=models.CASCADE)
    initiated_date = models.DateTimeField(default=datetime.now, blank=True)

class sample_result(models.Model):
    sample = models.OneToOneField(
        Sample,
        on_delete=models.CASCADE,
        primary_key=True,
        default=None,
        null=False,
    )
    completed_by = models.ForeignKey(User, on_delete=models.CASCADE)
    result = models.CharField(max_length=200)
    result_date = models.DateTimeField(default=datetime.now, blank=True)


<div>
    <table> <!-- Table that will hold sample model values -->
        {% csrf_token %}
        {% for sample in samples %}
        <tr>
            <th>
                Sample Name
                <img src="#"/>
            </th>
            <th>
                Description
            </th>
            <th>
                Tracking Number
                <img src="#"/>
            </th>
            <th>
                Volume/Size
            </th>
            <th>
                Type
                <img src="#"/>
            </th>
            <th>
                Expiration
                <img src="#"/>
            </th>
            <th>
                Logged Date
                <img src="#"/>
            </th>
            <th>
                Logged By
                <img src="#"/>
            </th>
        </tr>
        <tr>
            <td>{{samples.sample_name}}</td>
            <td>{{samples.sample_description}}</td>
        </tr>
        {% endfor %}
    </table>
</div>

        self.fields["logged_by"].widget.attrs.update({
            'type': 'text',
            'placeholder': 'Logged By',
            'class': 'registration-input',
            'autocomplete': 'off',
        })



class SampleCreate(LoginRequiredMixin, CreateView):
    template_name = 'sample'
    model= Sample
    form_class = SampleForm
    def form_valid(self, form):
        form.instance.logged_by = self.request.user
        return super().form_valid(form)